{"version":3,"sources":["components/searchPageHead/searchPageHead.js","containers/ShowSearchResult/ShowSearchResult.js","components/showHotPosts/showHotPosts.js","components/searchPageHead/searchPageHead.module.css"],"names":["searchPageHead","props","count","showCount","haveContent","countOfContent","style","direction","className","StyleSheet","Container","borderColor","darkMode","Content","type","placeholder","lastQuery","decodeURI","color","onChange","onSetResearchValue","onKeyDown","e","key","keyCode","onResearch","value","searchQuery","autoFocus","Clear","onClick","target","Cross1","Cross2","Count","ShowSearchResult","state","changeableQuery","foundContent","page","loadedPage","onResearchValue","cancelToken","getContentBySearch","query","lastPage","wasThere","find","el","trim","length","setState","setCancelToken","c","axios","get","CancelToken","then","res","data","status","prevContent","concat","content","prevState","catch","err","console","log","onGetResearchValue","onResearchingOnSearchPage","newQuery","history","push","window","scrollTo","this","searchQ","location","search","split","prevProps","hotPosts","loadMore","postsCount","nextProps","Component","connect","withRouter","showHotPosts","dataLength","next","loader","post","isLast","hasMore","map","index","module","exports"],"mappings":"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","file":"static/js/5.47df61d5.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport StyleSheet from \"./searchPageHead.module.css\";\r\nimport Main from \"../UI/mainDiv/mainDiv\";\r\n\r\nconst searchPageHead = (props) => {\r\n  let count;\r\n\r\n  if (!props.showCount) {\r\n    count = null;\r\n  }\r\n  if (!props.haveContent) {\r\n    count =\r\n      \"نتیجه ای یافت نشد؛\";\r\n  }\r\n  if (props.haveContent && props.showCount) {\r\n    count = ` ${props.countOfContent} مطلب یافت شد`;\r\n  }\r\n\r\n  const researching = (e) => {\r\n    if (e.key === \"Enter\" || e.keyCode === 13) {\r\n      props.onResearch();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Main style={{ direction: \"rtl\" }}>\r\n      <div\r\n        className={StyleSheet.Container}\r\n        style={{ borderColor: props.darkMode ? \"white\" : \"black\" }}\r\n      >\r\n        <div className={StyleSheet.Content}>\r\n          <label>\r\n            <input\r\n            type=\"text\"\r\n            placeholder={props.lastQuery ? decodeURI(props.lastQuery) : \"جستجو...\"}\r\n            style={{ color: props.darkMode ? \"white\" : \"black\" }}\r\n            onChange={props.onSetResearchValue}\r\n            onKeyDown={researching}\r\n            value={props.searchQuery}\r\n            autoFocus\r\n          />\r\n          {props.searchQuery !== \"\" && props.searchQuery ? (\r\n            <div className={StyleSheet.Clear} onClick={() => props.onSetResearchValue({target: { value: \"\"}})}>\r\n              <span className={StyleSheet.Cross1}></span>\r\n              <span className={StyleSheet.Cross2}></span>\r\n            </div>\r\n          ) : null}\r\n          </label>\r\n        </div>\r\n        <p\r\n          className={StyleSheet.Count}\r\n          style={{ color: props.darkMode ? \"white\" : \"black\" }}\r\n        >\r\n          {props.lastQuery ? count : null}\r\n        </p>\r\n        {!props.haveContent && props.lastQuery ? (\r\n          <p\r\n            className={StyleSheet.Count}\r\n            style={{ color: props.darkMode ? \"white\" : \"black\" }}\r\n          >\r\n            پیشنهاد می شود که از کلمات هم معنی، مشابه یا اگر کلمه لاتین است از\r\n            نوشتار اصلی آن یا بلعکس استفاده کنید.\r\n          </p>\r\n        ) : null}\r\n      </div>\r\n    </Main>\r\n  );\r\n};\r\n\r\nexport default searchPageHead;\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport ShowHotPosts from \"../../components/showHotPosts/showHotPosts\";\r\nimport SearchHead from \"../../components/searchPageHead/searchPageHead\";\r\n\r\nclass ShowSearchResult extends Component {\r\n  state = {\r\n    searchQuery: \"\",\r\n    changeableQuery: \"\",\r\n    foundContent: [],\r\n    count: 1,\r\n    page: 1,\r\n    loadedPage: [],\r\n    haveContent: true,\r\n    onResearchValue: \"\",\r\n    cancelToken: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.scrollTo(0, 0);\r\n    this.state.cancelToken && this.state.cancelToken();\r\n    const searchQ = this.props.location.search.split(\"=\")[1];\r\n    this.setState(\r\n      {\r\n        searchQuery: searchQ,\r\n        changeableQuery: searchQ ? decodeURI(searchQ) : \"\",\r\n      },\r\n      () => this.getContentBySearch(this.state.page, this.state.searchQuery)\r\n    );\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const searchQ = this.props.location.search.split(\"=\")[1];\r\n\r\n    if (prevProps.location.search.split(\"=\")[1] !== searchQ) {\r\n      this.getContentBySearch(1, searchQ);\r\n      // console.log(\"did up\");\r\n    }\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    if (nextProps.location.search.split(\"=\")[1] !== prevState.searchQuery) {\r\n      // if(prevState.cancelToken) {\r\n      //   prevState.cancelToken();\r\n      // }\r\n      prevState.cancelToken && prevState.cancelToken();\r\n      // console.log(\"on changing\");\r\n      const searchQ = nextProps.location.search.split(\"=\")[1];\r\n      return {\r\n        searchQuery: searchQ,\r\n        changeableQuery: searchQ ? decodeURI(searchQ) : \"\",\r\n        page: 1,\r\n        foundContent: [],\r\n        count: 1,\r\n        haveContent: true,\r\n        loadedPage: [],\r\n      };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  getContentBySearch = (page, query = this.state.searchQuery) => {\r\n    const lastPage = [...this.state.loadedPage];\r\n    // const exp = lastPage.push(page)\r\n    // console.log(\"exp \", exp, typeof exp)\r\n    const wasThere = lastPage.find((el) => el === page);\r\n\r\n    if (query) {\r\n      let searchQuery = query.trim();\r\n      if (!wasThere) {\r\n        lastPage[lastPage.length] = page;\r\n        this.setState({ loadedPage: lastPage });\r\n        const setCancelToken = (c) => this.setState({ cancelToken: c });\r\n        axios\r\n          .get(\r\n            `https://zoomitlist.herokuapp.com/s/content?search=${searchQuery}&page=${page}`,\r\n            {\r\n              cancelToken: new axios.CancelToken((c) => setCancelToken(c)),\r\n            }\r\n          )\r\n          .then((res) => res.data)\r\n          .then((data) => {\r\n            if (!data.status) {\r\n              // console.log(\"no error from server\");\r\n              if (data.count) {\r\n                this.setState({ count: data.count });\r\n              }\r\n              if (data.count === 0) this.setState({ haveContent: false });\r\n              const prevContent = [...this.state.foundContent];\r\n              this.setState({\r\n                foundContent: prevContent.concat(data.content),\r\n              });\r\n              // console.log(\"content found\");\r\n              // console.log(data.content);\r\n              return data.count;\r\n            } else return false;\r\n          })\r\n          .then((count) => {\r\n            if (count && this.state.foundContent.length < this.state.count) {\r\n              this.setState((prevState) => ({ page: prevState.page + 1 }));\r\n            }\r\n          })\r\n          .catch((err) => console.log(err));\r\n      }\r\n    } else {\r\n      this.setState({haveContent: false})\r\n    }\r\n  };\r\n\r\n  onGetResearchValue = (e) =>\r\n    this.setState({ changeableQuery: e.target.value });\r\n\r\n  onResearchingOnSearchPage = () => {\r\n    const newQuery = this.state.changeableQuery.trim();\r\n    if (newQuery !== \"\") {\r\n      this.props.history.push(`/search?q=${newQuery}`);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <SearchHead\r\n          onSetResearchValue={this.onGetResearchValue}\r\n          onResearch={this.onResearchingOnSearchPage}\r\n          searchQuery={this.state.changeableQuery}\r\n          lastQuery={this.state.searchQuery}\r\n          countOfContent={this.state.count}\r\n          showCount={this.state.foundContent.length > 0}\r\n          haveContent={this.state.haveContent}\r\n          darkMode={this.props.darkMode}\r\n        />\r\n        {this.state.haveContent ? (\r\n          <ShowHotPosts\r\n            hotPosts={this.state.foundContent}\r\n            loadMore={this.getContentBySearch}\r\n            postsCount={this.state.count}\r\n            darkMode={this.props.darkMode}\r\n            page={this.state.page}\r\n          />\r\n        ) : null}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  darkMode: state.darkMode\r\n})\r\n\r\nexport default connect(mapStateToProps)(withRouter(ShowSearchResult));\r\n","import React from \"react\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\nimport PostItem from \"../../components/UI/postItem/postItem\";\r\n// import StyleSheet from \"./showHotPosts.module.css\";\r\nimport Main from \"../UI/mainDiv/mainDiv\";\r\n\r\nconst showHotPosts = (props) => {\r\n  return (\r\n    <Main>\r\n      <InfiniteScroll\r\n        dataLength={props.hotPosts.length}\r\n        next={() => {\r\n          props.loadMore(props.page);\r\n          console.log(\"l 12\");\r\n        }}\r\n        loader={\r\n          props.page === 1 ? (\r\n            <>\r\n              <PostItem post={{}} darkMode={props.darkMode} isLast={true} />\r\n              <PostItem post={{}} darkMode={props.darkMode} isLast={true} />\r\n              <PostItem post={{}} darkMode={props.darkMode} isLast={true} />\r\n              <PostItem post={{}} darkMode={props.darkMode} isLast={true} />\r\n              <PostItem post={{}} darkMode={props.darkMode} isLast={true} />\r\n            </>\r\n          ) : (\r\n            <>\r\n              <PostItem post={{}} darkMode={props.darkMode} isLast={true} />\r\n            </>\r\n          )\r\n        }\r\n        hasMore={props.hotPosts.length < props.postsCount}\r\n      >\r\n        {props.hotPosts.map((el, index) => (\r\n          <PostItem\r\n            key={index}\r\n            post={el}\r\n            darkMode={props.darkMode}\r\n            isLast={index === props.hotPosts.length - 1}\r\n          />\r\n        ))}\r\n      </InfiniteScroll>\r\n    </Main>\r\n  );\r\n};\r\n\r\nexport default showHotPosts;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"searchPageHead_Main__An3-T\",\"Main_NoContent\":\"searchPageHead_Main_NoContent__1uzFx\",\"Container\":\"searchPageHead_Container__2iWPP\",\"Count\":\"searchPageHead_Count__42OH7\",\"Content\":\"searchPageHead_Content__31-SR\",\"Clear\":\"searchPageHead_Clear__1zo2y\",\"Cross1\":\"searchPageHead_Cross1__2K1fU\",\"Cross2\":\"searchPageHead_Cross2__gcYUV\"};"],"sourceRoot":""}